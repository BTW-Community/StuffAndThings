diff --git a/minecraft/net/minecraft/src/EntityCreature.java b/minecraft/net/minecraft/src/EntityCreature.java
index 74bb74e..5de5cdb 100644
--- a/minecraft/net/minecraft/src/EntityCreature.java
+++ b/minecraft/net/minecraft/src/EntityCreature.java
@@ -43,7 +43,7 @@ public abstract class EntityCreature extends EntityLiving
 		}
 
 		this.hasAttacked = this.isMovementCeased();
-		float var1 = 16.0F;
+		float var1 = 32.0F;
 
 		if (this.entityToAttack == null)
 		{
diff --git a/minecraft/net/minecraft/src/EntityCreeper.java b/minecraft/net/minecraft/src/EntityCreeper.java
index 5252d4f..ce30c71 100644
--- a/minecraft/net/minecraft/src/EntityCreeper.java
+++ b/minecraft/net/minecraft/src/EntityCreeper.java
@@ -140,11 +140,11 @@ public class EntityCreeper extends EntityMob
 
 					if (this.getPowered())
 					{
-						this.worldObj.createExplosion(this, this.posX, this.posY, this.posZ, (float)(this.explosionRadius * 2), var2);
+						this.worldObj.newExplosion(this, this.posX, this.posY, this.posZ, (float)(this.explosionRadius * 2), YYStuffAndThings.yyCreeperFire, var2);
 					}
 					else
 					{
-						this.worldObj.createExplosion(this, this.posX, this.posY, this.posZ, (float)this.explosionRadius, var2);
+						this.worldObj.newExplosion(this, this.posX, this.posY, this.posZ, (float)this.explosionRadius, YYStuffAndThings.yyCreeperFire, var2);
 					}
 
 					this.setDead();
diff --git a/minecraft/net/minecraft/src/EntityFishHook.java b/minecraft/net/minecraft/src/EntityFishHook.java
index b732510..68fb886 100644
--- a/minecraft/net/minecraft/src/EntityFishHook.java
+++ b/minecraft/net/minecraft/src/EntityFishHook.java
@@ -580,7 +580,7 @@ public class EntityFishHook extends Entity
 
 		for ( int iTempI = i - 2; iTempI <= i + 2; iTempI++ )
 		{
-			for ( int iTempJ = j - 2; iTempJ <= j; iTempJ++ )
+			for ( int iTempJ = j - 1; iTempJ <= j; iTempJ++ )
 			{
 				for ( int iTempK = k - 2; iTempK <= k + 2; iTempK++ )
 				{
@@ -622,7 +622,7 @@ public class EntityFishHook extends Entity
 					{
 						// in the rain
 						
-						iBiteOdds /= 2;
+						iBiteOdds /= 20;
 					}
 				}
 			}
@@ -641,7 +641,7 @@ public class EntityFishHook extends Entity
 				{
 					// in the rain
 					
-					iBiteOdds /= 2;
+					iBiteOdds /= 6;
 				}
 			}
 	
diff --git a/minecraft/net/minecraft/src/EntityItem.java b/minecraft/net/minecraft/src/EntityItem.java
index 98e5268..66ee587 100644
--- a/minecraft/net/minecraft/src/EntityItem.java
+++ b/minecraft/net/minecraft/src/EntityItem.java
@@ -291,6 +291,9 @@ public class EntityItem extends Entity
 		
 		// FCMOD: Code added
 		par1NBTTagCompound.setLong( "fcDespawnTime", m_lAbsoluteItemDespawnTime );
+		
+		par1NBTTagCompound.setString("yyDroppedByPlayerDeath", droppedByPlayerDeath);
+		par1NBTTagCompound.setInteger("yyNDeath", nDeath);
 		// END FCMOD    
 	}
 
@@ -309,7 +312,16 @@ public class EntityItem extends Entity
 		{
 			m_lAbsoluteItemDespawnTime = par1NBTTagCompound.getLong( "fcDespawnTime" );
 		}
-		// END FCMOD	    
+		
+		if(par1NBTTagCompound.hasKey("yyDroppedByPlayerDeath"))
+		{
+			droppedByPlayerDeath = par1NBTTagCompound.getString("yyDroppedByPlayerDeath");
+		}
+		if(par1NBTTagCompound.hasKey("yyNDeath"))
+		{
+			nDeath = par1NBTTagCompound.getInteger("yyNDeath");
+		}
+		// END FCMOD
 		
 		if (this.getEntityItem() == null)
 		{
@@ -425,6 +437,9 @@ public class EntityItem extends Entity
 	// FCMOD: Code added    
 	private long m_lAbsoluteItemDespawnTime = 0;
 	
+	public String droppedByPlayerDeath = "";
+	public int nDeath = -1;
+	
 	private void UpdateHardcoreBuoy()
 	{
 		if ( FCBetterThanWolves.IsHardcoreBuoyEnabled( worldObj ) )
@@ -726,7 +741,23 @@ public class EntityItem extends Entity
 	{
 		if ( !worldObj.isRemote )
 		{
-			if ( m_lAbsoluteItemDespawnTime > 0 )
+			if(nDeath > -1)
+			{
+				EntityPlayer player = MinecraftServer.getServer().worldServers[0].getPlayerEntityByName(droppedByPlayerDeath);
+				if(player == null)
+				{
+					NBTTagCompound nbt = ((SaveHandler)MinecraftServer.getServer().worldServers[0].getSaveHandler()).getPlayerData(droppedByPlayerDeath);
+					if(nbt.hasKey("yyNumberOfDeaths") && nDeath < nbt.getInteger("yyNumberOfDeaths") - 10)
+					{
+						setDead();
+					}
+				}
+				else if(nDeath < player.numberOfDeaths - 10)
+				{
+					setDead();
+				}
+			}
+			else if ( m_lAbsoluteItemDespawnTime > 0 )
 			{
 				// using getTotalWorldTime() here so that /time commands and time advancement due to HC Spawn don't affect it
 				
@@ -752,7 +783,8 @@ public class EntityItem extends Entity
 		// using getTotalWorldTime() here so that /time commands and time advancement due to HC Spawn don't affect it
 		
 		if (!worldObj.isRemote) {
-			m_lAbsoluteItemDespawnTime = MinecraftServer.getServer().worldServers[0].getTotalWorldTime() + 24000L;
+			droppedByPlayerDeath = player.username;
+			nDeath = player.numberOfDeaths;
 		}
 	}
 	
diff --git a/minecraft/net/minecraft/src/EntityPlayer.java b/minecraft/net/minecraft/src/EntityPlayer.java
index 2d298d0..610d496 100644
--- a/minecraft/net/minecraft/src/EntityPlayer.java
+++ b/minecraft/net/minecraft/src/EntityPlayer.java
@@ -130,7 +130,33 @@ public abstract class EntityPlayer extends EntityLiving implements ICommandSende
 
 	public int getMaxHealth()
 	{
-		return 20;
+		return dataWatcher.getWatchableObjectInt(maxHealthAndFoodDataWatcherID) & 0x0000FFFF;
+	}
+	
+	public void setMaxHealth(int maxHealth)
+	{
+		maxHealth = Math.min(maxHealth, 140);
+		maxHealth = Math.max(maxHealth, 35);
+		dataWatcher.updateObject(
+			maxHealthAndFoodDataWatcherID,
+			(dataWatcher.getWatchableObjectInt(maxHealthAndFoodDataWatcherID) & 0xFFFF0000) + maxHealth
+		);
+	}
+	
+	public int getMaxFood()
+	{
+		return (dataWatcher.getWatchableObjectInt(maxHealthAndFoodDataWatcherID) & 0xFFFF0000) >> 16;
+	}
+	
+	public void setMaxFood(int maxFood)
+	{
+		maxFood = Math.min(maxFood, 120);
+		maxFood = Math.max(maxFood, 60);
+		dataWatcher.updateObject(
+			maxHealthAndFoodDataWatcherID,
+			(dataWatcher.getWatchableObjectInt(maxHealthAndFoodDataWatcherID) & 0x0000FFFF) + (maxFood << 16)
+		);
+		foodStats.setMaxFood(getMaxFood());
 	}
 
 	protected void entityInit()
@@ -152,6 +178,8 @@ public abstract class EntityPlayer extends EntityLiving implements ICommandSende
 		dataWatcher.addObject( m_iSpawnChunksVisualizationLocationIDataWatcherID, new Integer( 0 ) );
 		dataWatcher.addObject( m_iSpawnChunksVisualizationLocationJDataWatcherID, new Integer( 0 ) );
 		dataWatcher.addObject( m_iSpawnChunksVisualizationLocationKDataWatcherID, new Integer( 0 ) );
+		
+		dataWatcher.addObject(maxHealthAndFoodDataWatcherID, Integer.valueOf(0x003C0046));
 		// END FCMOD
 	}
 
@@ -959,6 +987,20 @@ public abstract class EntityPlayer extends EntityLiving implements ICommandSende
 	 */
 	public boolean attackEntityFrom(DamageSource par1DamageSource, int par2)
 	{
+		if(("thrown".equals(par1DamageSource.getDamageType()) && par2==0) || "cactus".equals(par1DamageSource.getDamageType()))
+		{
+			par2 = 1;
+		}
+		else if(par1DamageSource.isExplosion())
+		{
+			par2 *= 4;
+		}
+		else
+		{
+			par2 = (int)(par2 * 3.5);
+		}
+		
+		
 		if (this.isEntityInvulnerable())
 		{
 			return false;
@@ -1141,6 +1183,16 @@ public abstract class EntityPlayer extends EntityLiving implements ICommandSende
 			this.field_94063_bt.func_94547_a(par1DamageSource, var3, par2);
 		}
 	}
+	
+	protected int applyArmorCalculations(DamageSource source, int damage)
+	{
+		if(!source.isUnblockable())
+		{
+			this.damageArmor(damage*2/7);
+			damage = damage*(25-getTotalArmorValue())/25;
+		}
+		return damage;
+	}
 
 	/**
 	 * Displays the furnace GUI for the passed in furnace entity. Args: tileEntityFurnace
@@ -2099,7 +2151,7 @@ public abstract class EntityPlayer extends EntityLiving implements ICommandSende
 			return false;
 		}
 		// END FCMOD
-		return (par1 || this.foodStats.needFood()) && !this.capabilities.disableDamage;
+		return (par1 || this.foodStats.needFood(this)) && !this.capabilities.disableDamage;
 	}
 
 	/**
@@ -2415,11 +2467,15 @@ public abstract class EntityPlayer extends EntityLiving implements ICommandSende
 	private static final int m_iSpawnChunksVisualizationLocationJDataWatcherID = 30;
 	private static final int m_iSpawnChunksVisualizationLocationKDataWatcherID = 31;
 	
+	private static final int maxHealthAndFoodDataWatcherID = 19;
+	
 	private static final int m_iTicksBetweenEmoteSounds = 10;
 	
 	public static final float m_fExhaustionJumping = 0.2F;
 	public static final float m_fExhaustionJumpingSprinting = 1.0F;
 	
+	public int numberOfDeaths = 0;
+	
 	protected void ReadModDataFromNBT( NBTTagCompound tag )
 	{
 		if ( tag.hasKey( "fcTimeOfLastSpawnAssignment" ) )
@@ -2451,6 +2507,16 @@ public abstract class EntityPlayer extends EntityLiving implements ICommandSende
 		{
 			m_iInGloomCounter = tag.getInteger( "fcGloomCounter" );
 		}
+		
+		if(tag.hasKey("yyMaxHealth"))
+		{
+			setMaxHealth(tag.getInteger("yyMaxHealth"));
+			setMaxFood(6*getMaxHealth()/7);
+		}
+		if(tag.hasKey("yyNumberOfDeaths"))
+		{
+			numberOfDeaths = tag.getInteger("yyNumberOfDeaths");
+		}
 	}
 	
 	protected void WriteModDataToNBT( NBTTagCompound tag )
@@ -2470,6 +2536,9 @@ public abstract class EntityPlayer extends EntityLiving implements ICommandSende
 	 	
 	 	tag.setInteger( "fcGloomLevel", GetGloomLevel() );
 	 	tag.setInteger( "fcGloomCounter", m_iInGloomCounter );
+	 	
+	 	tag.setInteger("yyMaxHealth", getMaxHealth());
+	 	tag.setInteger("yyNumberOfDeaths", numberOfDeaths);
 	}
 	
 	@Override
@@ -2542,13 +2611,13 @@ public abstract class EntityPlayer extends EntityLiving implements ICommandSende
 	@Override
 	public boolean CanJump()
 	{		
-		return health > 4 && foodStats.getFoodLevel() > 12 && (int)foodStats.getSaturationLevel() < 18;
+		return this.GetHealthPenaltyLevel() <= 3 && this.GetHungerPenaltyLevel() <= 2 && this.GetFatPenaltyLevel() <= 3;
 	}
 	
 	@Override
 	public boolean CanSwim()
 	{		
-		return !isWeighted() && health > 4;
+		return !this.isWeighted() && this.GetHealthPenaltyLevel() <= 3;
 	}
 	
 	@Override
@@ -2760,7 +2829,7 @@ public abstract class EntityPlayer extends EntityLiving implements ICommandSende
 	
 	public boolean HasStatusPenalty()
 	{
-		return getHealth() <= 10 || foodStats.getFoodLevel() <= 24 || (int)foodStats.getSaturationLevel() >= 12;
+		return this.GetHealthPenaltyLevel() > 0 || this.GetHungerPenaltyLevel() > 0 || this.GetFatPenaltyLevel() > 0;
 	}
 	
 	public int GetMaximumStatusPenaltyLevel()
@@ -3255,13 +3324,16 @@ public abstract class EntityPlayer extends EntityLiving implements ICommandSende
 	protected boolean IsPlayerHoldingSail()
 	{
 		ItemStack currentItemStack = inventory.mainInventory[inventory.currentItem];
-		
-		if ( currentItemStack != null )
-		{
-			return currentItemStack.itemID == FCBetterThanWolves.fcItemWindMillBlade.itemID;
-		}
-		
-		return false;
+		int slot = inventory.currentItem;
+		ItemStack nextStack = inventory.getStackInSlot((slot+1)%9);
+		ItemStack prevStack = inventory.getStackInSlot((slot+8)%9);
+		
+		boolean o = inventory.getCurrentItem() != null &&
+			inventory.getCurrentItem().itemID == Item.map.itemID &&(
+				(nextStack != null && nextStack.itemID == FCBetterThanWolves.fcItemWindMillBlade.itemID) ||
+				(prevStack != null && prevStack.itemID == FCBetterThanWolves.fcItemWindMillBlade.itemID)
+			);
+		return (currentItemStack != null ? currentItemStack.itemID == FCBetterThanWolves.fcItemWindMillBlade.itemID : false) || o;
 	}
 	
 	@Override
diff --git a/minecraft/net/minecraft/src/EntityPlayerMP.java b/minecraft/net/minecraft/src/EntityPlayerMP.java
index c47163d..451f9ad 100644
--- a/minecraft/net/minecraft/src/EntityPlayerMP.java
+++ b/minecraft/net/minecraft/src/EntityPlayerMP.java
@@ -1180,7 +1180,7 @@ public class EntityPlayerMP extends EntityPlayer implements ICrafting
 				addPotionEffect( new PotionEffect( Potion.confusion.getId(), 180, 0, true ) );                            
 			}
 			
-			if ( health <= 2 )
+			if ( GetHealthPenaltyLevel()>= 5 )
 			{
 				addPotionEffect( new PotionEffect( Potion.blindness.getId(), 180, 0, true ) );                            
 			}
@@ -1246,87 +1246,19 @@ public class EntityPlayerMP extends EntityPlayer implements ICrafting
 	@Override
 	protected void UpdateFatPenaltyLevel()
 	{
-		int iFat = (int)foodStats.getSaturationLevel();
-		int iFatLevel = 4;
-		
-		if ( iFat < 12 )
-		{
-			iFatLevel = 0;
-		}
-		else if ( iFat < 14 )
-		{
-			iFatLevel = 1;
-		}
-		else if ( iFat < 16 )
-		{
-			iFatLevel = 2;
-		}
-		else if ( iFat < 18 )
-		{
-			iFatLevel = 3;
-		}
-		
-		SetFatPenaltyLevel( iFatLevel );
+		SetFatPenaltyLevel(YYUtilsPenalties.getFatPenaltyLevel((int)foodStats.getSaturationLevel(), getMaxFood()));
 	}
 	
 	@Override
 	protected void UpdateHungerPenaltyLevel()
 	{
-		int iHunger = foodStats.getFoodLevel();
-		int iPenaltyLevel = 5;
-		
-		if ( iHunger > 24 )
-		{
-			iPenaltyLevel = 0;
-		}
-		else if ( iHunger > 18 )
-		{
-			iPenaltyLevel = 1;
-		}
-		else if ( iHunger > 12 )
-		{
-			iPenaltyLevel = 2;
-		}
-		else if ( iHunger > 6 )
-		{
-			iPenaltyLevel = 3;
-		}
-		else if ( iHunger > 0 || foodStats.getSaturationLevel() > 0F )
-		{
-			iPenaltyLevel = 4;
-		}
-		
-		SetHungerPenaltyLevel( iPenaltyLevel );
+		SetHungerPenaltyLevel(YYUtilsPenalties.getHungerPenaltyLevel(foodStats.getFoodLevel(), getMaxFood()));
 	}
 	
 	@Override
 	protected void UpdateHealthPenaltyLevel()
 	{
-		int iHealth = getHealth();
-		int iPenaltyLevel = 5;
-		
-		if ( iHealth > 10 )
-		{
-			iPenaltyLevel = 0;
-		}
-		else if ( iHealth > 8 )
-		{
-			iPenaltyLevel = 1;
-		}
-		else if ( iHealth > 6 )
-		{
-			iPenaltyLevel = 2;
-		}
-		else if ( iHealth > 4 )
-		{
-			iPenaltyLevel = 3;
-		}
-		else if ( iHealth > 2 )
-		{
-			iPenaltyLevel = 4;
-		}
-		
-		SetHealthPenaltyLevel( iPenaltyLevel );
+		SetHealthPenaltyLevel(YYUtilsPenalties.getHealthPenaltyLevel(getHealth(), getMaxHealth()));
 	}
 	
 	private boolean IsInGloom()
diff --git a/minecraft/net/minecraft/src/FoodStats.java b/minecraft/net/minecraft/src/FoodStats.java
index dcff638..8295bd0 100644
--- a/minecraft/net/minecraft/src/FoodStats.java
+++ b/minecraft/net/minecraft/src/FoodStats.java
@@ -2,12 +2,13 @@ package net.minecraft.src;
 
 public class FoodStats
 {
+	protected int maxFood = 60;
 	/** The player's food level. */
 	// FCMOD: Code change to increase food meter resolution
 	/*
 	private int foodLevel = 20;
 	*/
-	private int foodLevel = 60;
+	private int foodLevel = maxFood;
 	// END FCMOD
 
 	/** The player's food saturation. */
@@ -28,9 +29,16 @@ public class FoodStats
 	/*
 	private int prevFoodLevel = 20;
 	*/
-	private int prevFoodLevel = 60;
+	private int prevFoodLevel = maxFood;
 	// END FCMOD
 
+	public void setMaxFood(int maxFood)
+	{
+		maxFood = Math.min(maxFood, 120);
+		maxFood = Math.max(maxFood, 60);
+		this.maxFood = maxFood;
+	}
+	
 	/**
 	 * Args: int foodLevel, float foodSaturationModifier
 	 */
@@ -131,17 +139,21 @@ public class FoodStats
 				foodLevel = foodLevel * 3;
 				foodSaturationLevel = 0F;
 			}
+			if (par1NBTTagCompound.hasKey("yyMaxFood"))
+			{
+				maxFood = par1NBTTagCompound.getInteger("yyMaxFood");
+			}
 			
 			// sanity check the values as apparently they can get fucked up when importing from vanilla
 			
-			if ( foodLevel > 60 || foodLevel < 0 )
+			if ( foodLevel > maxFood || foodLevel < 0 )
 			{
-				foodLevel = 60;
+				foodLevel = maxFood;
 			}
 			
-			if ( foodSaturationLevel > 20F || foodSaturationLevel < 0F )
+			if ( foodSaturationLevel > maxFood/3F || foodSaturationLevel < 0F )
 			{
-				foodSaturationLevel = 20F;
+				foodSaturationLevel = maxFood/3F;
 			}
 			// END FCMOD
 		}
@@ -159,6 +171,8 @@ public class FoodStats
 		
 		// FCMOD: Code added
 		par1NBTTagCompound.setBoolean( "fcFoodLevelAdjusted", true );
+		
+		par1NBTTagCompound.setInteger("yyMaxFood", maxFood);
 		// END FCMOD
 	}
 
@@ -178,13 +192,13 @@ public class FoodStats
 	/**
 	 * If foodLevel is not max.
 	 */
-	public boolean needFood()
+	public boolean needFood(EntityPlayer player)
 	{
 		// FCMOD: Code changed
 		/*
 		return this.foodLevel < 20;
 		*/
-		return this.foodLevel < 60;    	
+		return this.foodLevel < player.getMaxFood();
 		// END FCMOD
 	}
 
@@ -222,7 +236,7 @@ public class FoodStats
 	{
 		int iPreviousFoodLevel = foodLevel;
 		
-		foodLevel = Math.min( iFoodGain + foodLevel, 60);
+		foodLevel = Math.min( iFoodGain + foodLevel, maxFood);
 		
 		int iExcessFood = iFoodGain - ( foodLevel - iPreviousFoodLevel );
 		
@@ -230,7 +244,7 @@ public class FoodStats
 		{
 			// divide by 3 due to increased resolution
 			
-			foodSaturationLevel = Math.min( foodSaturationLevel + (float)iExcessFood * fFatMultiplier / 3F, 20F );
+			foodSaturationLevel = Math.min( foodSaturationLevel + (float)iExcessFood * fFatMultiplier / 3F, maxFood / 3F );
 		}
 	}
 	
@@ -267,11 +281,11 @@ public class FoodStats
 			foodExhaustionLevel = 0F;
 		}
 
-		if ( foodLevel > 24 && player.shouldHeal() )
+		if ( player.GetHungerPenaltyLevel() == 0 && player.shouldHeal() )
 		{
 			++foodTimer;
 
-			if ( foodTimer >= 600 ) // once every 30 seconds
+			if ( foodTimer >= 1800 ) // once every 30 seconds
 			{
 				player.heal( 1 );
 				foodTimer = 0;
diff --git a/minecraft/net/minecraft/src/GuiIngame.java b/minecraft/net/minecraft/src/GuiIngame.java
index ec30ae0..cc52414 100644
--- a/minecraft/net/minecraft/src/GuiIngame.java
+++ b/minecraft/net/minecraft/src/GuiIngame.java
@@ -152,6 +152,10 @@ public class GuiIngame extends Gui
 
 				var47 = var7 - 39;
 				var22 = var47 - 10;
+				if(this.mc.thePlayer.getMaxHealth()>70)
+				{
+					var22 -= 10;
+				}
 				var23 = this.mc.thePlayer.getTotalArmorValue();
 				var24 = -1;
 
@@ -165,9 +169,9 @@ public class GuiIngame extends Gui
 				int var29;
 				int var28;
 
-				for (var25 = 0; var25 < 10; ++var25)
+				for (var25 = 0; var25 < this.mc.thePlayer.getMaxHealth()/7; ++var25)
 				{
-					if (var23 > 0)
+					if (var23 > 0 & var25<10)
 					{
 						var26 = var18 + var25 * 8;
 
@@ -205,10 +209,10 @@ public class GuiIngame extends Gui
 						var27 = 1;
 					}
 
-					var28 = var18 + var25 * 8;
+					var28 = var18 + (var25%10) * 8;
 					var29 = var47;
 
-					if (var12 <= 4)
+					if (mc.thePlayer.GetHealthPenaltyLevel()>=4)
 					{
 						var29 = var47 + this.rand.nextInt(2);
 					}
@@ -224,7 +228,12 @@ public class GuiIngame extends Gui
 					{
 						var30 = 5;
 					}
-
+					
+					if(var25>=10)
+					{
+						var29 -= 10;
+					}
+					
 					this.drawTexturedModalRect(var28, var29, 16 + var27 * 9, 9 * var30, 9, 9);
 
 					if (var11)
@@ -240,15 +249,20 @@ public class GuiIngame extends Gui
 						}
 					}
 
-					if (var25 * 2 + 1 < var12)
+					if (var25 < var12/7)
 					{
 						this.drawTexturedModalRect(var28, var29, var26 + 36, 9 * var30, 9, 9);
 					}
+					else if (var25 == var12/7)
+					{
+						int partialHeart = var12%7;
+						drawTexturedModalRect(var28, var29, var26 + 36, 9 * var30, 1+partialHeart, 9);
+					}
 
-					if (var25 * 2 + 1 == var12)
+					/*if (var25 * 2 + 1 == var12)
 					{
 						this.drawTexturedModalRect(var28, var29, var26 + 45, 9 * var30, 9, 9);
-					}
+					}*/
 				}
 
 				this.mc.mcProfiler.endStartSection("food");
@@ -333,9 +347,10 @@ public class GuiIngame extends Gui
 							this.drawTexturedModalRect(var19 - var28 * 8 - 9, var22, 25, 18, 9, 9);
 						}
 					}
+					var22 -= 10;
 				}
 				// FCMOD: Added (client only)
-				else if ( !DrawPenaltyText( var19, var22 ) )
+				if ( !DrawPenaltyText( var19, var22 ) )
 				{                	
 					iSightlessTextOffset = 0;
 				}
@@ -1394,7 +1409,7 @@ public class GuiIngame extends Gui
 			m_iFoodOverlayShakeCounter--;
 		}
 		
-		for ( int iTempCount = 0; iTempCount < 10; ++iTempCount )
+		for ( int iTempCount = 0; iTempCount < this.mc.thePlayer.getMaxFood()/6; ++iTempCount )
 		{
 			int iShankScreenY = iScreenY;
 			int iShankTextureOffsetX = 16;
@@ -1426,8 +1441,12 @@ public class GuiIngame extends Gui
 				iShankScreenY = iScreenY + iShakeAmount;
 			}
 
-			int iShankScreenX = iScreenX - iTempCount * 8 - 9;
-			
+			int iShankScreenX = iScreenX - (iTempCount%10) * 8 - 9;
+
+			if(iTempCount>=10)
+			{
+				iShankScreenY -= 10;
+			}
 			drawTexturedModalRect( iShankScreenX, iShankScreenY, 16 + iBackgroundTextureOffsetX * 9, 27, 9, 9 );
 			
 			if ( iTempCount == iSaturationPips >> 3 )
diff --git a/minecraft/net/minecraft/src/ItemMap.java b/minecraft/net/minecraft/src/ItemMap.java
index 15fcb07..75c302a 100644
--- a/minecraft/net/minecraft/src/ItemMap.java
+++ b/minecraft/net/minecraft/src/ItemMap.java
@@ -318,8 +318,21 @@ public class ItemMap extends ItemMapBase
 				EntityPlayer var7 = (EntityPlayer)par3Entity;
 				var6.updateVisiblePlayers(var7, par1ItemStack);
 			}
-
-			if (par5)
+			
+			InventoryPlayer inventory = par3Entity.inventory;
+			int slot = inventory.currentItem;
+			ItemStack nextStack = inventory.getStackInSlot((slot+1)%9);
+			ItemStack prevStack = inventory.getStackInSlot((slot+8)%9);
+			boolean o =
+				par3Entity.ridingEntity instanceof EntityBoat &&
+				inventory.getCurrentItem() != null &&
+				inventory.getCurrentItem().itemID == FCBetterThanWolves.fcItemWindMillBlade.itemID &&
+				(
+					(nextStack != null && this.itemID == nextStack.itemID) ||
+					(prevStack != null && this.itemID == prevStack.itemID)
+					);
+
+			if (par5 || o)
 			{
 				this.updateMapData(par2World, par3Entity, var6);
 			}
diff --git a/minecraft/net/minecraft/src/Potion.java b/minecraft/net/minecraft/src/Potion.java
index c5e68c5..af9035b 100644
--- a/minecraft/net/minecraft/src/Potion.java
+++ b/minecraft/net/minecraft/src/Potion.java
@@ -125,7 +125,7 @@ public class Potion
 		}
 		else if (this.id == poison.id)
 		{
-			if (par1EntityLiving.getHealth() > 1)
+			if (par1EntityLiving.getHealth() > 3 || !(par1EntityLiving instanceof EntityPlayer) && par1EntityLiving.getHealth() > 1)
 			{
 				par1EntityLiving.attackEntityFrom(DamageSource.magic, 1);
 			}
@@ -158,7 +158,12 @@ public class Potion
 		}
 		else if ( this.id == heal.id )
 		{
-			par1EntityLiving.heal(6 << par2);
+			int h = 6 << par2;
+			if(par1EntityLiving instanceof EntityPlayer)
+			{
+				h = h*7/2;
+			}
+			par1EntityLiving.heal(h);
 		}
 		// END FCMOD
 	}
@@ -207,6 +212,10 @@ public class Potion
 		// END FCMOD        
 		{
 			var6 = (int)(par4 * (double)(6 << par3) + 0.5D);
+			if(par1EntityLiving instanceof EntityPlayer)
+			{
+				var6 = var6*7/2;
+			}
 			par2EntityLiving.heal(var6);
 		}
 	}
@@ -244,6 +253,20 @@ public class Potion
 			return var3 > 0 ? par1 % var3 == 0 : true;
 		}
 	}
+	
+	public boolean isReady(int par1, int par2, EntityLiving entity)
+	{
+		if(this.id == regeneration.id && entity instanceof EntityPlayer)
+		{
+			int var3 = 25 >> par2;
+			var3 = var3*2/7;
+			return var3 > 0 ? par1 % var3 == 0 : true;
+		}
+		else
+		{
+			return isReady(par1, par2);
+		}
+	}
 
 	/**
 	 * Set the potion name.
diff --git a/minecraft/net/minecraft/src/PotionEffect.java b/minecraft/net/minecraft/src/PotionEffect.java
index ed06573..f5d8f40 100644
--- a/minecraft/net/minecraft/src/PotionEffect.java
+++ b/minecraft/net/minecraft/src/PotionEffect.java
@@ -114,7 +114,7 @@ public class PotionEffect
 	{
 		if (this.duration > 0)
 		{
-			if (Potion.potionTypes[this.potionID].isReady(this.duration, this.amplifier))
+			if (Potion.potionTypes[this.potionID].isReady(this.duration, this.amplifier, par1EntityLiving))
 			{
 				this.performEffect(par1EntityLiving);
 			}
diff --git a/minecraft_server/net/minecraft/src/EntityCreature.java b/minecraft_server/net/minecraft/src/EntityCreature.java
index 8fb2bf7..3244c1d 100644
--- a/minecraft_server/net/minecraft/src/EntityCreature.java
+++ b/minecraft_server/net/minecraft/src/EntityCreature.java
@@ -43,7 +43,7 @@ public abstract class EntityCreature extends EntityLiving
 		}
 
 		this.hasAttacked = this.isMovementCeased();
-		float var1 = 16.0F;
+		float var1 = 32.0F;
 
 		if (this.entityToAttack == null)
 		{
diff --git a/minecraft_server/net/minecraft/src/EntityCreeper.java b/minecraft_server/net/minecraft/src/EntityCreeper.java
index fcd0429..d1e3c7e 100644
--- a/minecraft_server/net/minecraft/src/EntityCreeper.java
+++ b/minecraft_server/net/minecraft/src/EntityCreeper.java
@@ -140,11 +140,11 @@ public class EntityCreeper extends EntityMob
 
 					if (this.getPowered())
 					{
-						this.worldObj.createExplosion(this, this.posX, this.posY, this.posZ, (float)(this.explosionRadius * 2), var2);
+						this.worldObj.newExplosion(this, this.posX, this.posY, this.posZ, (float)(this.explosionRadius * 2), YYStuffAndThings.yyCreeperFire, var2);
 					}
 					else
 					{
-						this.worldObj.createExplosion(this, this.posX, this.posY, this.posZ, (float)this.explosionRadius, var2);
+						this.worldObj.newExplosion(this, this.posX, this.posY, this.posZ, (float)this.explosionRadius, YYStuffAndThings.yyCreeperFire, var2);
 					}
 
 					this.setDead();
diff --git a/minecraft_server/net/minecraft/src/EntityFishHook.java b/minecraft_server/net/minecraft/src/EntityFishHook.java
index 48e1ea5..89926f8 100644
--- a/minecraft_server/net/minecraft/src/EntityFishHook.java
+++ b/minecraft_server/net/minecraft/src/EntityFishHook.java
@@ -504,7 +504,7 @@ public class EntityFishHook extends Entity
 
 		for ( int iTempI = i - 2; iTempI <= i + 2; iTempI++ )
 		{
-			for ( int iTempJ = j - 2; iTempJ <= j; iTempJ++ )
+			for ( int iTempJ = j - 1; iTempJ <= j; iTempJ++ )
 			{
 				for ( int iTempK = k - 2; iTempK <= k + 2; iTempK++ )
 				{
@@ -546,7 +546,7 @@ public class EntityFishHook extends Entity
 					{
 						// in the rain
 						
-						iBiteOdds /= 2;
+						iBiteOdds /= 20;
 					}
 				}
 			}
@@ -565,7 +565,7 @@ public class EntityFishHook extends Entity
 				{
 					// in the rain
 					
-					iBiteOdds /= 2;
+					iBiteOdds /= 6;
 				}
 			}
 	
diff --git a/minecraft_server/net/minecraft/src/EntityItem.java b/minecraft_server/net/minecraft/src/EntityItem.java
index 4fad945..7d701d1 100644
--- a/minecraft_server/net/minecraft/src/EntityItem.java
+++ b/minecraft_server/net/minecraft/src/EntityItem.java
@@ -291,6 +291,9 @@ public class EntityItem extends Entity
 		
 		// FCMOD: Code added
 		par1NBTTagCompound.setLong( "fcDespawnTime", m_lAbsoluteItemDespawnTime );
+		
+		par1NBTTagCompound.setString("yyDroppedByPlayerDeath", droppedByPlayerDeath);
+		par1NBTTagCompound.setInteger("yyNDeath", nDeath);
 		// END FCMOD    
 	}
 
@@ -309,6 +312,15 @@ public class EntityItem extends Entity
 		{
 			m_lAbsoluteItemDespawnTime = par1NBTTagCompound.getLong( "fcDespawnTime" );
 		}
+		
+		if(par1NBTTagCompound.hasKey("yyDroppedByPlayerDeath"))
+		{
+			droppedByPlayerDeath = par1NBTTagCompound.getString("yyDroppedByPlayerDeath");
+		}
+		if(par1NBTTagCompound.hasKey("yyNDeath"))
+		{
+			nDeath = par1NBTTagCompound.getInteger("yyNDeath");
+		}
 		// END FCMOD
 		
 		if (this.getEntityItem() == null)
@@ -421,6 +433,9 @@ public class EntityItem extends Entity
 	// FCMOD: Code added
 	private long m_lAbsoluteItemDespawnTime = 0;
 	
+	public String droppedByPlayerDeath = "";
+	public int nDeath = -1;
+	
 	private void UpdateHardcoreBuoy()
 	{
 		if ( FCBetterThanWolves.IsHardcoreBuoyEnabled( worldObj ) )
@@ -722,7 +737,23 @@ public class EntityItem extends Entity
 	{
 		if ( !worldObj.isRemote )
 		{
-			if ( m_lAbsoluteItemDespawnTime > 0 )
+			if(nDeath > -1)
+			{
+				EntityPlayer player = MinecraftServer.getServer().worldServers[0].getPlayerEntityByName(droppedByPlayerDeath);
+				if(player == null)
+				{
+					NBTTagCompound nbt = ((SaveHandler)MinecraftServer.getServer().worldServers[0].getSaveHandler()).getPlayerData(droppedByPlayerDeath);
+					if(nbt.hasKey("yyNumberOfDeaths") && nDeath < nbt.getInteger("yyNumberOfDeaths") - 10)
+					{
+						setDead();
+					}
+				}
+				else if(nDeath < player.numberOfDeaths - 10)
+				{
+					setDead();
+				}
+			}
+			else if ( m_lAbsoluteItemDespawnTime > 0 )
 			{
 				// using getTotalWorldTime() here so that /time commands and time advancement due to HC Spawn don't affect it
 				
@@ -748,7 +779,8 @@ public class EntityItem extends Entity
 		// using getTotalWorldTime() here so that /time commands and time advancement due to HC Spawn don't affect it
 		
 		if (!worldObj.isRemote) {
-			m_lAbsoluteItemDespawnTime = MinecraftServer.getServer().worldServers[0].getTotalWorldTime() + 24000L;
+			droppedByPlayerDeath = player.username;
+			nDeath = player.numberOfDeaths;
 		}
 	}
 	
diff --git a/minecraft_server/net/minecraft/src/EntityPlayer.java b/minecraft_server/net/minecraft/src/EntityPlayer.java
index 88dfbc4..149ec87 100644
--- a/minecraft_server/net/minecraft/src/EntityPlayer.java
+++ b/minecraft_server/net/minecraft/src/EntityPlayer.java
@@ -118,7 +118,33 @@ public abstract class EntityPlayer extends EntityLiving implements ICommandSende
 
 	public int getMaxHealth()
 	{
-		return 20;
+		return dataWatcher.getWatchableObjectInt(maxHealthAndFoodDataWatcherID) & 0x0000FFFF;
+	}
+	
+	public void setMaxHealth(int maxHealth)
+	{
+		maxHealth = Math.min(maxHealth, 140);
+		maxHealth = Math.max(maxHealth, 35);
+		dataWatcher.updateObject(
+			maxHealthAndFoodDataWatcherID,
+			(dataWatcher.getWatchableObjectInt(maxHealthAndFoodDataWatcherID) & 0xFFFF0000) + maxHealth
+		);
+	}
+	
+	public int getMaxFood()
+	{
+		return (dataWatcher.getWatchableObjectInt(maxHealthAndFoodDataWatcherID) & 0xFFFF0000) >> 16;
+	}
+	
+	public void setMaxFood(int maxFood)
+	{
+		maxFood = Math.min(maxFood, 120);
+		maxFood = Math.max(maxFood, 60);
+		dataWatcher.updateObject(
+			maxHealthAndFoodDataWatcherID,
+			(dataWatcher.getWatchableObjectInt(maxHealthAndFoodDataWatcherID) & 0x0000FFFF) + (maxFood << 16)
+		);
+		foodStats.setMaxFood(getMaxFood());
 	}
 
 	protected void entityInit()
@@ -140,6 +166,8 @@ public abstract class EntityPlayer extends EntityLiving implements ICommandSende
 		dataWatcher.addObject( m_iSpawnChunksVisualizationLocationIDataWatcherID, new Integer( 0 ) );
 		dataWatcher.addObject( m_iSpawnChunksVisualizationLocationJDataWatcherID, new Integer( 0 ) );
 		dataWatcher.addObject( m_iSpawnChunksVisualizationLocationKDataWatcherID, new Integer( 0 ) );
+		
+		dataWatcher.addObject(maxHealthAndFoodDataWatcherID, Integer.valueOf(0x003C0046));
 		// END FCMOD
 	}
 
@@ -905,6 +933,20 @@ public abstract class EntityPlayer extends EntityLiving implements ICommandSende
 	 */
 	public boolean attackEntityFrom(DamageSource par1DamageSource, int par2)
 	{
+		if(("thrown".equals(par1DamageSource.getDamageType()) && par2==0) || "cactus".equals(par1DamageSource.getDamageType()))
+		{
+			par2 = 1;
+		}
+		else if(par1DamageSource.isExplosion())
+		{
+			par2 *= 4;
+		}
+		else
+		{
+			par2 = (int)(par2 * 3.5);
+		}
+		
+		
 		if (this.isEntityInvulnerable())
 		{
 			return false;
@@ -1087,6 +1129,16 @@ public abstract class EntityPlayer extends EntityLiving implements ICommandSende
 		}
 	}
 
+	protected int applyArmorCalculations(DamageSource source, int damage)
+	{
+		if(!source.isUnblockable())
+		{
+			this.damageArmor(damage*2/7);
+			damage = damage*(25-getTotalArmorValue())/25;
+		}
+		return damage;
+	}
+	
 	/**
 	 * Displays the furnace GUI for the passed in furnace entity. Args: tileEntityFurnace
 	 */
@@ -1950,7 +2002,7 @@ public abstract class EntityPlayer extends EntityLiving implements ICommandSende
 			return false;
 		}
 		// END FCMOD
-		return (par1 || this.foodStats.needFood()) && !this.capabilities.disableDamage;
+		return (par1 || this.foodStats.needFood(this)) && !this.capabilities.disableDamage;
 	}
 
 	/**
@@ -2246,11 +2298,15 @@ public abstract class EntityPlayer extends EntityLiving implements ICommandSende
 	private static final int m_iSpawnChunksVisualizationLocationJDataWatcherID = 30;
 	private static final int m_iSpawnChunksVisualizationLocationKDataWatcherID = 31;
 	
+	private static final int maxHealthAndFoodDataWatcherID = 19;
+	
 	private static final int m_iTicksBetweenEmoteSounds = 10;
 	
 	public static final float m_fExhaustionJumping = 0.2F;
 	public static final float m_fExhaustionJumpingSprinting = 1.0F;
 	
+	public int numberOfDeaths = 0;
+	
 	protected void ReadModDataFromNBT( NBTTagCompound tag )
 	{
 		if ( tag.hasKey( "fcTimeOfLastSpawnAssignment" ) )
@@ -2282,6 +2338,16 @@ public abstract class EntityPlayer extends EntityLiving implements ICommandSende
 		{
 			m_iInGloomCounter = tag.getInteger( "fcGloomCounter" );
 		}
+		
+		if(tag.hasKey("yyMaxHealth"))
+		{
+			setMaxHealth(tag.getInteger("yyMaxHealth"));
+			setMaxFood(6*getMaxHealth()/7);
+		}
+		if(tag.hasKey("yyNumberOfDeaths"))
+		{
+			numberOfDeaths = tag.getInteger("yyNumberOfDeaths");
+		}
 	}
 	
 	protected void WriteModDataToNBT( NBTTagCompound tag )
@@ -2301,6 +2367,9 @@ public abstract class EntityPlayer extends EntityLiving implements ICommandSende
 	 	
 	 	tag.setInteger( "fcGloomLevel", GetGloomLevel() );
 	 	tag.setInteger( "fcGloomCounter", m_iInGloomCounter );
+	 	
+	 	tag.setInteger("yyMaxHealth", getMaxHealth());
+	 	tag.setInteger("yyNumberOfDeaths", numberOfDeaths);
 	}
 	
 	@Override
@@ -2373,13 +2442,13 @@ public abstract class EntityPlayer extends EntityLiving implements ICommandSende
 	@Override
 	public boolean CanJump()
 	{		
-		return health > 4 && foodStats.getFoodLevel() > 12 && (int)foodStats.getSaturationLevel() < 18;
+		return this.GetHealthPenaltyLevel() <= 3 && this.GetHungerPenaltyLevel() <= 2 && this.GetFatPenaltyLevel() <= 3;
 	}
 	
 	@Override
 	public boolean CanSwim()
 	{		
-		return !isWeighted() && health > 4;
+		return !this.isWeighted() && this.GetHealthPenaltyLevel() <= 3;
 	}
 	
 	@Override
@@ -2591,7 +2660,7 @@ public abstract class EntityPlayer extends EntityLiving implements ICommandSende
 	
 	public boolean HasStatusPenalty()
 	{
-		return getHealth() <= 10 || foodStats.getFoodLevel() <= 24 || (int)foodStats.getSaturationLevel() >= 12;
+		return this.GetHealthPenaltyLevel() > 0 || this.GetHungerPenaltyLevel() > 0 || this.GetFatPenaltyLevel() > 0;
 	}
 	
 	public int GetMaximumStatusPenaltyLevel()
@@ -3086,13 +3155,16 @@ public abstract class EntityPlayer extends EntityLiving implements ICommandSende
 	protected boolean IsPlayerHoldingSail()
 	{
 		ItemStack currentItemStack = inventory.mainInventory[inventory.currentItem];
-		
-		if ( currentItemStack != null )
-		{
-			return currentItemStack.itemID == FCBetterThanWolves.fcItemWindMillBlade.itemID;
-		}
-		
-		return false;
+		int slot = inventory.currentItem;
+		ItemStack nextStack = inventory.getStackInSlot((slot+1)%9);
+		ItemStack prevStack = inventory.getStackInSlot((slot+8)%9);
+		
+		boolean o = inventory.getCurrentItem() != null &&
+			inventory.getCurrentItem().itemID == Item.map.itemID &&(
+				(nextStack != null && nextStack.itemID == FCBetterThanWolves.fcItemWindMillBlade.itemID) ||
+				(prevStack != null && prevStack.itemID == FCBetterThanWolves.fcItemWindMillBlade.itemID)
+			);
+		return (currentItemStack != null ? currentItemStack.itemID == FCBetterThanWolves.fcItemWindMillBlade.itemID : false) || o;
 	}
 	
 	@Override
diff --git a/minecraft_server/net/minecraft/src/EntityPlayerMP.java b/minecraft_server/net/minecraft/src/EntityPlayerMP.java
index 7aeff1d..5ae9f76 100644
--- a/minecraft_server/net/minecraft/src/EntityPlayerMP.java
+++ b/minecraft_server/net/minecraft/src/EntityPlayerMP.java
@@ -1186,7 +1186,7 @@ public class EntityPlayerMP extends EntityPlayer implements ICrafting
 				addPotionEffect( new PotionEffect( Potion.confusion.getId(), 180, 0, true ) );                            
 			}
 			
-			if ( health <= 2 )
+			if ( GetHealthPenaltyLevel()>= 5 )
 			{
 				addPotionEffect( new PotionEffect( Potion.blindness.getId(), 180, 0, true ) );                            
 			}
@@ -1252,87 +1252,19 @@ public class EntityPlayerMP extends EntityPlayer implements ICrafting
 	@Override
 	protected void UpdateFatPenaltyLevel()
 	{
-		int iFat = (int)foodStats.getSaturationLevel();
-		int iFatLevel = 4;
-		
-		if ( iFat < 12 )
-		{
-			iFatLevel = 0;
-		}
-		else if ( iFat < 14 )
-		{
-			iFatLevel = 1;
-		}
-		else if ( iFat < 16 )
-		{
-			iFatLevel = 2;
-		}
-		else if ( iFat < 18 )
-		{
-			iFatLevel = 3;
-		}
-		
-		SetFatPenaltyLevel( iFatLevel );
+		SetFatPenaltyLevel(YYUtilsPenalties.getFatPenaltyLevel((int)foodStats.getSaturationLevel(), getMaxFood()));
 	}
 	
 	@Override
 	protected void UpdateHungerPenaltyLevel()
 	{
-		int iHunger = foodStats.getFoodLevel();
-		int iPenaltyLevel = 5;
-		
-		if ( iHunger > 24 )
-		{
-			iPenaltyLevel = 0;
-		}
-		else if ( iHunger > 18 )
-		{
-			iPenaltyLevel = 1;
-		}
-		else if ( iHunger > 12 )
-		{
-			iPenaltyLevel = 2;
-		}
-		else if ( iHunger > 6 )
-		{
-			iPenaltyLevel = 3;
-		}
-		else if ( iHunger > 0 || foodStats.getSaturationLevel() > 0F )
-		{
-			iPenaltyLevel = 4;
-		}
-		
-		SetHungerPenaltyLevel( iPenaltyLevel );
+		SetHungerPenaltyLevel(YYUtilsPenalties.getHungerPenaltyLevel(foodStats.getFoodLevel(), getMaxFood()));
 	}
 	
 	@Override
 	protected void UpdateHealthPenaltyLevel()
 	{
-		int iHealth = getHealth();
-		int iPenaltyLevel = 5;
-		
-		if ( iHealth > 10 )
-		{
-			iPenaltyLevel = 0;
-		}
-		else if ( iHealth > 8 )
-		{
-			iPenaltyLevel = 1;
-		}
-		else if ( iHealth > 6 )
-		{
-			iPenaltyLevel = 2;
-		}
-		else if ( iHealth > 4 )
-		{
-			iPenaltyLevel = 3;
-		}
-		else if ( iHealth > 2 )
-		{
-			iPenaltyLevel = 4;
-		}
-		
-		SetHealthPenaltyLevel( iPenaltyLevel );
+		SetHealthPenaltyLevel(YYUtilsPenalties.getHealthPenaltyLevel(getHealth(), getMaxHealth()));
 	}
 	
 	private boolean IsInGloom()
diff --git a/minecraft_server/net/minecraft/src/FoodStats.java b/minecraft_server/net/minecraft/src/FoodStats.java
index 4518192..4c9c876 100644
--- a/minecraft_server/net/minecraft/src/FoodStats.java
+++ b/minecraft_server/net/minecraft/src/FoodStats.java
@@ -2,12 +2,13 @@ package net.minecraft.src;
 
 public class FoodStats
 {
+	protected int maxFood = 60;
 	/** The player's food level. */
 	// FCMOD: Code change to increase food meter resolution
 	/*
 	private int foodLevel = 20;
 	*/
-	private int foodLevel = 60;
+	private int foodLevel = maxFood;
 	// END FCMOD
 
 	/** The player's food saturation. */
@@ -28,9 +29,15 @@ public class FoodStats
 	/*
 	private int prevFoodLevel = 20;
 	*/
-	private int prevFoodLevel = 60;
+	private int prevFoodLevel = maxFood;
 	// END FCMOD
 
+	public void setMaxFood(int maxFood)
+	{
+		maxFood = Math.min(maxFood, 120);
+		maxFood = Math.max(maxFood, 60);
+		this.maxFood = maxFood;
+	}
 	/**
 	 * Args: int foodLevel, float foodSaturationModifier
 	 */
@@ -131,17 +138,21 @@ public class FoodStats
 				foodLevel = foodLevel * 3;
 				foodSaturationLevel = 0F;
 			}
+			if (par1NBTTagCompound.hasKey("yyMaxFood"))
+			{
+				maxFood = par1NBTTagCompound.getInteger("yyMaxFood");
+			}
 			
 			// sanity check the values as apparently they can get fucked up when importing from vanilla
 			
-			if ( foodLevel > 60 || foodLevel < 0 )
+			if ( foodLevel > maxFood || foodLevel < 0 )
 			{
-				foodLevel = 60;
+				foodLevel = maxFood;
 			}
 			
-			if ( foodSaturationLevel > 20F || foodSaturationLevel < 0F )
+			if ( foodSaturationLevel > maxFood/3F || foodSaturationLevel < 0F )
 			{
-				foodSaturationLevel = 20F;
+				foodSaturationLevel = maxFood/3F;
 			}
 			// END FCMOD
 		}
@@ -159,6 +170,8 @@ public class FoodStats
 		
 		// FCMOD: Code added
 		par1NBTTagCompound.setBoolean( "fcFoodLevelAdjusted", true );
+		
+		par1NBTTagCompound.setInteger("yyMaxFood", maxFood);
 		// END FCMOD
 	}
 
@@ -173,16 +186,15 @@ public class FoodStats
 	/**
 	 * Get whether the player must eat food.
 	 */
-	public boolean needFood()
+	public boolean needFood(EntityPlayer player)
 	{
 		// FCMOD: Code changed
 		/*
 		return this.foodLevel < 20;
 		*/
-		return this.foodLevel < 60;    	
+		return this.foodLevel < player.getMaxFood();
 		// END FCMOD
 	}
-
 	/**
 	 * adds input to foodExhaustionLevel to a max of 40
 	 */
@@ -219,7 +231,7 @@ public class FoodStats
 	{
 		int iPreviousFoodLevel = foodLevel;
 		
-		foodLevel = Math.min( iFoodGain + foodLevel, 60);
+		foodLevel = Math.min( iFoodGain + foodLevel, maxFood);
 		
 		int iExcessFood = iFoodGain - ( foodLevel - iPreviousFoodLevel );
 		
@@ -264,11 +276,11 @@ public class FoodStats
 			foodExhaustionLevel = 0F;
 		}
 
-		if ( foodLevel > 24 && player.shouldHeal() )
+		if ( player.GetHungerPenaltyLevel() == 0 && player.shouldHeal() )
 		{
 			++foodTimer;
 
-			if ( foodTimer >= 600 ) // once every 30 seconds
+			if ( foodTimer >= 1800 ) // once every 30 seconds
 			{
 				player.heal( 1 );
 				foodTimer = 0;
diff --git a/minecraft_server/net/minecraft/src/ItemMap.java b/minecraft_server/net/minecraft/src/ItemMap.java
index 3b6ec1d..1924dc8 100644
--- a/minecraft_server/net/minecraft/src/ItemMap.java
+++ b/minecraft_server/net/minecraft/src/ItemMap.java
@@ -302,8 +302,21 @@ public class ItemMap extends ItemMapBase
 				EntityPlayer var7 = (EntityPlayer)par3Entity;
 				var6.updateVisiblePlayers(var7, par1ItemStack);
 			}
-
-			if (par5)
+			
+			InventoryPlayer inventory = par3Entity.inventory;
+			int slot = inventory.currentItem;
+			ItemStack nextStack = inventory.getStackInSlot((slot+1)%9);
+			ItemStack prevStack = inventory.getStackInSlot((slot+8)%9);
+			boolean o =
+				par3Entity.ridingEntity instanceof EntityBoat &&
+				inventory.getCurrentItem() != null &&
+				inventory.getCurrentItem().itemID == FCBetterThanWolves.fcItemWindMillBlade.itemID &&
+				(
+					(nextStack != null && this.itemID == nextStack.itemID) ||
+					(prevStack != null && this.itemID == prevStack.itemID)
+					);
+
+			if (par5 || o)
 			{
 				this.updateMapData(par2World, par3Entity, var6);
 			}
diff --git a/minecraft_server/net/minecraft/src/Potion.java b/minecraft_server/net/minecraft/src/Potion.java
index b8993c8..2659659 100644
--- a/minecraft_server/net/minecraft/src/Potion.java
+++ b/minecraft_server/net/minecraft/src/Potion.java
@@ -122,7 +122,7 @@ public class Potion
 		}
 		else if (this.id == poison.id)
 		{
-			if (par1EntityLiving.getHealth() > 1)
+			if (par1EntityLiving.getHealth() > 3 || !(par1EntityLiving instanceof EntityPlayer) && par1EntityLiving.getHealth() > 1)
 			{
 				par1EntityLiving.attackEntityFrom(DamageSource.magic, 1);
 			}
@@ -155,7 +155,12 @@ public class Potion
 		}
 		else if ( this.id == heal.id )
 		{
-			par1EntityLiving.heal(6 << par2);
+			int h = 6 << par2;
+			if(par1EntityLiving instanceof EntityPlayer)
+			{
+				h = h*7/2;
+			}
+			par1EntityLiving.heal(h);
 		}
 		// END FCMOD
 	}
@@ -204,6 +209,10 @@ public class Potion
 		// END FCMOD        
 		{
 			var6 = (int)(par4 * (double)(6 << par3) + 0.5D);
+			if(par1EntityLiving instanceof EntityPlayer)
+			{
+				var6 = var6*7/2;
+			}
 			par2EntityLiving.heal(var6);
 		}
 	}
@@ -241,6 +250,20 @@ public class Potion
 			return var3 > 0 ? par1 % var3 == 0 : true;
 		}
 	}
+	
+	public boolean isReady(int par1, int par2, EntityLiving entity)
+	{
+		if(this.id == regeneration.id && entity instanceof EntityPlayer)
+		{
+			int var3 = 25 >> par2;
+			var3 = var3*2/7;
+			return var3 > 0 ? par1 % var3 == 0 : true;
+		}
+		else
+		{
+			return isReady(par1, par2);
+		}
+	}
 
 	/**
 	 * Set the potion name.
diff --git a/minecraft_server/net/minecraft/src/PotionEffect.java b/minecraft_server/net/minecraft/src/PotionEffect.java
index 23bd414..bd079fd 100644
--- a/minecraft_server/net/minecraft/src/PotionEffect.java
+++ b/minecraft_server/net/minecraft/src/PotionEffect.java
@@ -111,7 +111,7 @@ public class PotionEffect
 	{
 		if (this.duration > 0)
 		{
-			if (Potion.potionTypes[this.potionID].isReady(this.duration, this.amplifier))
+			if (Potion.potionTypes[this.potionID].isReady(this.duration, this.amplifier, par1EntityLiving))
 			{
 				this.performEffect(par1EntityLiving);
 			}
